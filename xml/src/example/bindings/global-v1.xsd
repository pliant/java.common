<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
	xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
	xmlns:common="http://xml.common.pliant.code/global" 
	targetNamespace="http://xml.common.pliant.code/global" 
	jaxb:version="2.0"
	jaxb:extensionBindingPrefixes="xjc">
	
	<!-- Base Object That All Structures Inherit From -->
	<xsd:complexType name="Base">
		<!-- 
			A single universal ID that ever object can be identified with.
			Moved to an attribute to provide better identification via XPath.
		-->
		<xsd:attribute name="id" type="xsd:string" use="optional"/>
	</xsd:complexType>
	
	<!-- Person Object The Defines Commonalities in all People -->
	<xsd:complexType name="Person">
		<xsd:complexContent>
			<xsd:extension base="common:Base">
				<xsd:sequence>
					<xsd:element ref="common:Identity" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:group ref="common:NamesGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- Address Object The Defines Commonalities in all Addresses -->
	<xsd:complexType name="Address">
		<xsd:complexContent>
			<xsd:extension base="common:Base">
				<xsd:sequence>
					<xsd:element name="Address1" minOccurs="0" type="xsd:string"/>
					<xsd:element name="Address2" minOccurs="0" type="xsd:string"/>
					<xsd:element name="Address3" minOccurs="0" type="xsd:string"/>
					<xsd:element name="City" minOccurs="0" type="xsd:string"/>
					<xsd:element name="State" minOccurs="0" type="xsd:string"/>
					<xsd:element name="Zip" minOccurs="0" type="xsd:string"/>
					<xsd:element name="County" minOccurs="0" type="xsd:string"/>
					<xsd:element name="Country" minOccurs="0" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- A group with common values for people names. -->
	<xsd:group name="NamesGroup">
		<xsd:sequence>
			<xsd:element name="Title" minOccurs="0" type="xsd:string"/>
			<xsd:element name="FirstName" minOccurs="0" type="xsd:string"/>
			<xsd:element name="MiddleName" minOccurs="0" type="xsd:string"/>
			<xsd:element name="LastName" minOccurs="0" type="xsd:string"/>
			<xsd:element name="FullName" minOccurs="0" type="xsd:string"/>
			<xsd:element name="Suffix" minOccurs="0" type="xsd:string"/>
		</xsd:sequence>
	</xsd:group>
	
	<!-- An  group with common values for people names. -->
	<xsd:element name="Demographics">
		<xsd:complexType>
			<xsd:sequence>
				<!-- The System That Is Tracking The Persons Demographics.  Examples would be HSSC-MDM, PATCOM-MUSC -->
				<xsd:element name="Authority" minOccurs="0" type="xsd:string"/>
				<xsd:element name="Gender" minOccurs="0" type="xsd:string"/>
				<xsd:element name="Race" minOccurs="0" type="xsd:string"/>
				<xsd:element name="Religion" minOccurs="0" type="xsd:string"/>
				<xsd:element name="Ethnicity" minOccurs="0" type="xsd:string"/>
				<xsd:element name="MaritalStatus" minOccurs="0" type="xsd:string"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- Represents a collection of Identity's. -->
	<xsd:element name="Identities">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="common:Identity" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- Represents a identity that tracks a person within a specific system. -->
	<xsd:element name="Identity">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="common:Base">
					<xsd:sequence>
						<!-- The System That Is Tracking The Person.  Examples would be HSSC-MDM, PATCOM-MUSC -->
						<xsd:element name="Authority" minOccurs="0" type="xsd:string"/>
						
						<!-- The Type of ID.  Examples are MRN, Account Number, etc. -->
						<xsd:element name="Type" minOccurs="0" type="xsd:string"/>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
